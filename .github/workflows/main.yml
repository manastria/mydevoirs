name: CI

on:
  push:
    branches: [ master, dev ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ master, dev ]

permissions:
  contents: write

jobs:
  test:
    name: Tests on ${{ matrix.os }} / Python ${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python: ['3.11']

    env:
      KIVY_WINDOW: mock
      KIVY_GL_BACKEND: mock

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install Poetry
        run: pip install poetry==1.8.2

      - name: Install dependencies
        run: poetry install --with dev

      - name: Run tests (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update && sudo apt-get install -y xvfb
          xvfb-run -a poetry run pytest -q

      - name: Run tests (Windows)
        if: runner.os == 'Windows'
        run: poetry run pytest -q

      - name: Upload coverage (Codecov)
        if: ${{ secrets.CODECOV_TOKEN != '' }}
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

  build:
    name: Build Windows installer
    if: startsWith(github.ref, 'refs/tags/v')
    needs: test
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Poetry
        run: pip install poetry==1.8.2

      - name: Install project dependencies
        run: poetry install --with dev

      - name: Install WiX Toolset 3.x
        shell: powershell
        run: |
          choco install wixtoolset --version=3.14.0.6526 -y
          echo "WIX=C:\\Program Files (x86)\\WiX Toolset v3.14" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Package app with Briefcase
        run: |
          poetry run briefcase create windows
          poetry run briefcase build windows
          poetry run briefcase package windows --no-sign

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: installer-windows
          path: |
            **/*.msi

  create-release:
    name: Create GitHub Release
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download installer artifacts
        uses: actions/download-artifact@v4
        with:
          path: installers
          pattern: installer-*
          merge-multiple: true

      - name: Create Release and upload files
        uses: softprops/action-gh-release@v1
        with:
          files: installers/**/*

